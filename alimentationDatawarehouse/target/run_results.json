{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.9", "generated_at": "2024-12-02T13:46:20.925284Z", "invocation_id": "b543f4e3-d06c-4f0c-84a2-218cb4e1f760", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:30.838345Z", "completed_at": "2024-12-02T13:45:30.838345Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:30.838345Z", "completed_at": "2024-12-02T13:45:34.658842Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.828890562057495, "adapter_response": {"_message": "CREATE TABLE (263.0 rows, 28.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 263, "bytes_processed": 29513, "bytes_billed": 10485760, "location": "EU", "project_id": "projet-bi-isen", "job_id": "2637c1de-d945-4db9-affc-9daebc30e051", "slot_ms": 5098}, "message": "CREATE TABLE (263.0 rows, 28.8 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.stg_CommandeClient", "compiled": true, "compiled_code": "WITH raw_data AS (\n    SELECT\n        transactionID AS transaction_id,\n        nomClient AS client_nom,\n        prenomClient AS client_prenom,\n        adresseClient AS client_adresse,\n        contactClient AS client_contact,\n        dateCommande AS date_commande,\n        livreur AS livreur_nom,\n        statut AS statut_commande,\n        produit AS produit_nom,\n        quantite AS produit_quantite,\n        prixUnite AS produit_prix_unitaire\n    FROM `projet-bi-isen`.`ODS`.`f_commandeInternet` WHERE ingestionTimestamp BETWEEN '2024-12-01' AND CURRENT_TIMESTAMP()      --mettre en variable pour la date de d\u00e9but\n)\n\nSELECT *\nFROM raw_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`stg_CommandeClient`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:34.667177Z", "completed_at": "2024-12-02T13:45:34.667177Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:34.675426Z", "completed_at": "2024-12-02T13:45:37.949089Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.281912088394165, "adapter_response": {"_message": "CREATE TABLE (160.0 rows, 23.6 KiB processed)", "code": "CREATE TABLE", "rows_affected": 160, "bytes_processed": 24119, "bytes_billed": 10485760, "location": "EU", "project_id": "projet-bi-isen", "job_id": "7abcdebf-9456-4fea-8352-c9d3aa636512", "slot_ms": 4640}, "message": "CREATE TABLE (160.0 rows, 23.6 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.stg_CommandeFournisseur", "compiled": true, "compiled_code": "WITH raw_data AS (\n    SELECT\n        ProvisionnementID AS provisionnement_id,\n        FournisseurNom AS fournisseur_nom,\n        FournisseurContact AS fournisseur_contact,\n        FournisseurAdresse AS fournisseur_adresse,\n        EntrepotNom AS entrepot_nom,\n        EntrepotAdresse AS entrepot_adresse,\n        EntrepotDescription AS entrepot_description,\n        DateCommande AS date_commande,\n        DateLivraison AS date_livraison,\n        Materiaux AS materiaux_nom,\n        Quantite AS quantite_provisionnee,\n        Prix AS prix_provision,\n        QualiteProvision AS qualite_provision\n    FROM `projet-bi-isen`.`ODS`.`f_approvisionnement`\n    WHERE ingestionTimestamp BETWEEN '2024-12-01' AND CURRENT_TIMESTAMP()\n)\n\nSELECT *\nFROM raw_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:37.957368Z", "completed_at": "2024-12-02T13:45:37.965405Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:37.965405Z", "completed_at": "2024-12-02T13:45:41.502054Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.5446863174438477, "adapter_response": {"_message": "CREATE TABLE (175.0 rows, 15.4 KiB processed)", "code": "CREATE TABLE", "rows_affected": 175, "bytes_processed": 15739, "bytes_billed": 10485760, "location": "EU", "project_id": "projet-bi-isen", "job_id": "87f2050b-a4b0-4081-a8cc-60305be7bd66", "slot_ms": 5570}, "message": "CREATE TABLE (175.0 rows, 15.4 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.stg_Production", "compiled": true, "compiled_code": "-- models/staging/stg_Production.sql\n\nWITH raw_data AS (\n    SELECT\n        ReleveProductionID AS production_id,\n        Entrepot AS entrepot_nom,\n        dateDebut AS production_debut,\n        dateFin AS production_fin,\n        produitProduit AS produit_nom,\n        quantiteProduites AS quantite_produite,\n        materiauxUtilise AS materiaux_utilises,\n        quantiteUtilise AS quantite_utilisee\n    FROM `projet-bi-isen`.`ODS`.`f_listeProduction`\n    WHERE ingestionTimestamp BETWEEN '2024-12-01' AND CURRENT_TIMESTAMP()\n)\n\nSELECT *\nFROM raw_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`stg_Production`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:41.510090Z", "completed_at": "2024-12-02T13:45:41.518324Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:41.527054Z", "completed_at": "2024-12-02T13:45:44.932158Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.4220683574676514, "adapter_response": {"_message": "MERGE (126.0 rows, 11.5 KiB processed)", "code": "MERGE", "rows_affected": 126, "bytes_processed": 11825, "bytes_billed": 20971520, "location": "EU", "project_id": "projet-bi-isen", "job_id": "32c1a22a-7754-414f-9301-af90d394dfce", "slot_ms": 20925}, "message": "MERGE (126.0 rows, 11.5 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_Client", "compiled": true, "compiled_code": "-- a modifi\u00e9\n\nWITH base AS (\n    SELECT\n        transaction_id,\n        client_nom AS Nom,\n        client_prenom AS Prenom,\n        client_adresse AS Adresse,\n        client_contact AS Contact,\n        ROW_NUMBER() OVER (\n            PARTITION BY client_nom, client_prenom, client_adresse, client_contact \n            ORDER BY transaction_id\n        ) AS rn\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeClient`\n)\n\n-- Si le mod\u00e8le est ex\u00e9cut\u00e9 en mode 'incremental', dbt ajoute seulement les donn\u00e9es non pr\u00e9sentes dans la table\nSELECT\n    GENERATE_UUID() AS ClientID,\n    Nom,\n    Prenom,\n    Adresse,\n    Contact\nFROM base\nWHERE rn = 1 -- Garde uniquement le premier entrep\u00f4t par groupe\n\n    -- Filtrage des nouveaux clients qui ne sont pas d\u00e9j\u00e0 dans d_Client\n    AND NOT EXISTS (\n        SELECT 1\n        FROM `projet-bi-isen`.`dataWarehouse`.`d_Client` AS target\n        WHERE target.Nom = base.Nom\n          AND target.Prenom = base.Prenom\n          AND target.Adresse = base.Adresse\n          AND target.Contact = base.Contact\n    )\n", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_Client`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:44.940159Z", "completed_at": "2024-12-02T13:45:44.956403Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:44.956403Z", "completed_at": "2024-12-02T13:45:48.755192Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.8230340480804443, "adapter_response": {"_message": "MERGE (4.0 rows, 2.0 KiB processed)", "code": "MERGE", "rows_affected": 4, "bytes_processed": 2086, "bytes_billed": 20971520, "location": "EU", "project_id": "projet-bi-isen", "job_id": "5fb6bfdc-da7b-47a6-ac22-681042be87ce", "slot_ms": 4463}, "message": "MERGE (4.0 rows, 2.0 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_Livreur", "compiled": true, "compiled_code": "WITH base AS (\n    SELECT\n        DISTINCT livreur_nom AS LivreurNom,\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeClient`\n)\n\n-- Si le mod\u00e8le est ex\u00e9cut\u00e9 en mode 'incremental', dbt ajoute seulement les donn\u00e9es non pr\u00e9sentes dans la table\nSELECT\n    GENERATE_UUID() AS LivreurID,\n    LivreurNom\nFROM base\n\n\n    -- Filtrage des nouveaux clients qui ne sont pas d\u00e9j\u00e0 dans d_Client\n    WHERE NOT EXISTS (\n        SELECT 1\n        FROM `projet-bi-isen`.`dataWarehouse`.`d_Livreur` AS target\n        WHERE target.LivreurNom = base.LivreurNom\n    )\n", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_Livreur`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:48.771875Z", "completed_at": "2024-12-02T13:45:48.788862Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:48.788862Z", "completed_at": "2024-12-02T13:45:54.539593Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.775710821151733, "adapter_response": {"_message": "MERGE (1.0 rows, 9.8 KiB processed)", "code": "MERGE", "rows_affected": 1, "bytes_processed": 10080, "bytes_billed": 20971520, "location": "EU", "project_id": "projet-bi-isen", "job_id": "357f6c03-c345-41e9-a690-5f8dd9755423", "slot_ms": 16283}, "message": "MERGE (1.0 rows, 9.8 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_Entrepot", "compiled": true, "compiled_code": "WITH base AS (\n    SELECT\n        provisionnement_id,\n        entrepot_nom AS EntrepotNom,\n        entrepot_adresse AS EntrepotAdresse,\n        entrepot_description AS EntrepotDescription,\n        ROW_NUMBER() OVER (\n            PARTITION BY entrepot_nom, entrepot_adresse \n            ORDER BY provisionnement_id\n        ) AS rn -- Num\u00e9rote chaque entrep\u00f4t pour \u00e9liminer les doublons\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`\n)\n\nSELECT\n    GENERATE_UUID() AS EntrepotID,\n    EntrepotNom,\n    EntrepotAdresse,\n    EntrepotDescription\nFROM base\nWHERE rn = 1 -- Garde uniquement le premier entrep\u00f4t par groupe\n\n    AND NOT EXISTS (\n        SELECT 1\n        FROM `projet-bi-isen`.`dataWarehouse`.`d_Entrepot` AS target\n        WHERE target.EntrepotNom = base.EntrepotNom\n          AND target.EntrepotAdresse = base.EntrepotAdresse\n    )\n", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_Entrepot`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:54.547833Z", "completed_at": "2024-12-02T13:45:54.569145Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:54.569145Z", "completed_at": "2024-12-02T13:45:57.936656Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.3888227939605713, "adapter_response": {"_message": "MERGE (5.0 rows, 6.3 KiB processed)", "code": "MERGE", "rows_affected": 5, "bytes_processed": 6444, "bytes_billed": 20971520, "location": "EU", "project_id": "projet-bi-isen", "job_id": "2a8b8f40-97ff-40ab-b282-bae710503e07", "slot_ms": 12888}, "message": "MERGE (5.0 rows, 6.3 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_FournisseurDetails", "compiled": true, "compiled_code": "WITH base AS (\n    SELECT\n        DISTINCT provisionnement_id,\n        fournisseur_nom AS FournisseurNom,\n        fournisseur_contact AS FournisseurContact,\n        fournisseur_adresse AS FournisseurAdresse,\n        ROW_NUMBER() OVER (\n            PARTITION BY fournisseur_nom, fournisseur_contact, fournisseur_adresse \n            ORDER BY provisionnement_id\n        ) AS rn\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`\n)\n\n-- Si le mod\u00e8le est ex\u00e9cut\u00e9 en mode 'incremental', dbt ajoute seulement les donn\u00e9es non pr\u00e9sentes dans la table\nSELECT\n    GENERATE_UUID() AS FournisseurID,\n    FournisseurNom,\n    FournisseurContact,\n    FournisseurAdresse\nFROM base\nWHERE rn = 1\n\n    -- Filtrage des nouveaux clients qui ne sont pas d\u00e9j\u00e0 dans d_Client\n    AND NOT EXISTS (\n        SELECT 1\n        FROM `projet-bi-isen`.`dataWarehouse`.`d_FournisseurDetails` AS target\n        WHERE target.FournisseurNom = base.FournisseurNom\n          AND target.FournisseurContact = base.FournisseurContact\n          AND target.FournisseurContact = base.FournisseurContact\n    )\n", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_FournisseurDetails`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:45:57.949092Z", "completed_at": "2024-12-02T13:45:57.968042Z"}, {"name": "execute", "started_at": "2024-12-02T13:45:57.969073Z", "completed_at": "2024-12-02T13:46:03.214796Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.265703916549683, "adapter_response": {"_message": "CREATE TABLE (29.0 rows, 4.1 KiB processed)", "code": "CREATE TABLE", "rows_affected": 29, "bytes_processed": 4195, "bytes_billed": 31457280, "location": "EU", "project_id": "projet-bi-isen", "job_id": "4ca88ba6-0fdb-497b-a5ac-43d73863ec02", "slot_ms": 37335}, "message": "CREATE TABLE (29.0 rows, 4.1 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_Materiaux", "compiled": true, "compiled_code": "\n\nWITH filtered_data AS (\n    SELECT\n        MateriauxID,\n        PrixUnitaire,\n        Quantite, \n    FROM `projet-bi-isen.dataWarehouse.f_CommandeFournisseur` \n),\naggregated_data AS (\n    SELECT\n        MateriauxID,\n        SUM(PrixUnitaire * Quantite) AS somme_ponderee_prix,\n        SUM(Quantite) AS somme_quantite\n    FROM filtered_data\n    GROUP BY MateriauxID\n),\nste AS(\n    SELECT\n    MateriauxID,\n    CASE\n        WHEN somme_quantite > 0 THEN ROUND(somme_ponderee_prix / somme_quantite,2)\n        ELSE NULL\n    END AS ValeurEstimee\n    FROM aggregated_data\n),\nexisting_data AS (\n    SELECT \n        mat.MateriauxID,\n        mat.MateriauxNom,\n        s.ValeurEstimee\n    FROM `projet-bi-isen`.`dataWarehouse`.`d_Materiaux` mat  -- Table actuelle d_Materiaux\n    LEFT JOIN ste s ON mat.MateriauxID = s.MateriauxID\n),\nnewDataValeruEstimee AS (\n    SELECT\n        materiaux_nom,\n        ROUND(SUM(quantite_provisionnee*prix_provision)/SUM(quantite_provisionnee),2) AS ValeurEstimee\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`\n    GROUP BY materiaux_nom\n),\nnew_data AS (\n    SELECT\n        GENERATE_UUID() AS MateriauxID,\n        comf.materiaux_nom AS MateriauxNom,\n        nd.ValeurEstimee AS ValeurEstimee\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur` comf\n    LEFT JOIN newDataValeruEstimee nd ON comf.materiaux_nom = nd.materiaux_nom\n    GROUP BY comf.materiaux_nom, nd.ValeurEstimee\n),\nunioned_data AS (\n    SELECT\n        MateriauxID,\n        MateriauxNom,\n        ValeurEstimee\n    FROM existing_data\n    UNION ALL\n    SELECT\n        MateriauxID,\n        MateriauxNom,\n        ValeurEstimee\n    FROM new_data\n    WHERE MateriauxNom NOT IN (SELECT MateriauxNom FROM existing_data)\n)\n\nSELECT \n    MateriauxID,\n    MateriauxNom,\n    ValeurEstimee\nFROM unioned_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_Materiaux`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:46:03.231081Z", "completed_at": "2024-12-02T13:46:03.248703Z"}, {"name": "execute", "started_at": "2024-12-02T13:46:03.257043Z", "completed_at": "2024-12-02T13:46:06.739115Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.5080347061157227, "adapter_response": {"_message": "MERGE (42.0 rows, 7.3 KiB processed)", "code": "MERGE", "rows_affected": 42, "bytes_processed": 7464, "bytes_billed": 41943040, "location": "EU", "project_id": "projet-bi-isen", "job_id": "9403e77b-64fc-4901-b510-03518b27c68c", "slot_ms": 5584}, "message": "MERGE (42.0 rows, 7.3 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_Date", "compiled": true, "compiled_code": "WITH date_Client AS (\n    SELECT DISTINCT\n        date_commande AS TriDate\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeClient`\n),\ndate_CommandeFournisseur AS (\n    SELECT DISTINCT\n        date_commande AS TriDate\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`\n    UNION ALL\n    SELECT DISTINCT\n        date_livraison AS TriDate\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`\n),\ndate_Production AS (\n    SELECT DISTINCT\n        production_debut AS TriDate\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_Production`\n    UNION ALL\n    SELECT DISTINCT\n        production_fin AS TriDate\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_Production`\n),\nmixDate AS (\n    SELECT DISTINCT\n        TriDate\n    FROM date_Client\n    UNION ALL\n    SELECT DISTINCT\n        TriDate\n    FROM date_CommandeFournisseur\n    UNION ALL\n    SELECT DISTINCT\n        TriDate\n    FROM date_Production\n),\ntriDoublon AS (\n    SELECT DISTINCT\n        TriDate\n    FROM mixDate\n)\n\nSELECT\n    GENERATE_UUID() AS DateID,          -- G\u00e9n\u00e9ration d'un identifiant unique pour chaque date\n    EXTRACT(YEAR FROM TriDate) AS Annee,\n    EXTRACT(MONTH FROM TriDate) AS Mois,\n    EXTRACT(DAY FROM TriDate) AS Jours,\n    TriDate AS DateViz\nFROM triDoublon\n\n\n-- Filtrage des nouvelles dates qui ne sont pas d\u00e9j\u00e0 pr\u00e9sentes dans la table cible\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM `projet-bi-isen`.`dataWarehouse`.`d_Date` AS target\n    WHERE \n        target.Annee = EXTRACT(YEAR FROM TriDate) AND\n        target.Mois = EXTRACT(MONTH FROM TriDate) AND\n        target.Jours = EXTRACT(DAY FROM TriDate)\n)\n", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_Date`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:46:06.756019Z", "completed_at": "2024-12-02T13:46:06.763989Z"}, {"name": "execute", "started_at": "2024-12-02T13:46:06.763989Z", "completed_at": "2024-12-02T13:46:10.765640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.017654180526733, "adapter_response": {"_message": "CREATE TABLE (30.0 rows, 9.3 KiB processed)", "code": "CREATE TABLE", "rows_affected": 30, "bytes_processed": 9507, "bytes_billed": 41943040, "location": "EU", "project_id": "projet-bi-isen", "job_id": "b31c5223-9283-4185-8ace-1fd47280514c", "slot_ms": 32925}, "message": "CREATE TABLE (30.0 rows, 9.3 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.d_Produit", "compiled": true, "compiled_code": "\n\nWITH filtered_data AS (\n    SELECT\n        prod.ProduitID,\n        prod.QuantiteProduite,\n        prod.MateriauxID,\n        mat.ValeurEstimee AS PrixUnitaire,\n        prod.QuantiteUtilise \n    FROM `projet-bi-isen.dataWarehouse.f_Production` prod\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Materiaux` mat ON prod.MateriauxID = mat.MateriauxID\n),\naggregated_data AS (\n    SELECT\n        ProduitID,\n        SUM(QuantiteProduite) AS somme_quantite_produite,\n        SUM(PrixUnitaire * QuantiteUtilise) AS somme_ponderee_prix,\n        SUM(QuantiteUtilise) AS somme_quantite\n    FROM filtered_data\n    GROUP BY ProduitID\n),\nste AS (\n    SELECT\n        ProduitID,\n        CASE\n            WHEN somme_quantite > 0 THEN ROUND((somme_ponderee_prix / somme_quantite) / somme_quantite_produite, 2)\n            ELSE NULL\n        END AS CoutdeRevient\n    FROM aggregated_data\n),\nexisting_data AS (\n    SELECT \n        prod.ProduitID,\n        prod.ProduitNom,\n        s.CoutdeRevient\n    FROM `projet-bi-isen`.`dataWarehouse`.`d_Produit` prod  -- Table actuelle d_Produit\n    LEFT JOIN ste s ON prod.ProduitID = s.ProduitID\n),\nnewdataCoutDeRevient AS (\n    SELECT\n        prod.produit_nom,\n        ROUND(SUM(mat.ValeurEstimee*prod.quantite_utilisee)/prod.quantite_produite,2) AS CoutdeRevient\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_Production` prod\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Materiaux` mat ON prod.materiaux_utilises = mat.MateriauxNom\n    GROUP BY produit_nom, prod.quantite_produite\n),\nnew_data AS (\n    SELECT\n        GENERATE_UUID() AS ProduitID,\n        prod.produit_nom AS ProduitNom,\n        ncdt.CoutdeRevient AS CoutdeRevient\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_Production` prod\n    LEFT JOIN newdataCoutDeRevient ncdt ON prod.produit_nom = ncdt.produit_nom\n    GROUP BY prod.produit_nom, ncdt.CoutdeRevient\n),\nunioned_data AS (\n    SELECT\n        ProduitID,\n        ProduitNom,\n        CoutdeRevient\n    FROM existing_data\n    UNION ALL\n    SELECT\n        ProduitID,\n        ProduitNom,\n        CoutdeRevient\n    FROM new_data\n    -- Am\u00e9lioration de la condition pour \u00e9viter les NULL avec NOT IN\n    WHERE ProduitNom NOT IN (SELECT ProduitNom FROM existing_data WHERE ProduitNom IS NOT NULL)\n)\n\nSELECT \n    ProduitID,\n    ProduitNom,\n    CoutdeRevient\nFROM unioned_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`d_Produit`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:46:10.773952Z", "completed_at": "2024-12-02T13:46:10.790247Z"}, {"name": "execute", "started_at": "2024-12-02T13:46:10.790247Z", "completed_at": "2024-12-02T13:46:13.764649Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.9906959533691406, "adapter_response": {"_message": "MERGE (160.0 rows, 17.2 KiB processed)", "code": "MERGE", "rows_affected": 160, "bytes_processed": 17655, "bytes_billed": 62914560, "location": "EU", "project_id": "projet-bi-isen", "job_id": "4a0797c5-3c88-40bf-9cc8-03052f2c174c", "slot_ms": 5356}, "message": "MERGE (160.0 rows, 17.2 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.f_CommandeFournisseur", "compiled": true, "compiled_code": "WITH staged_data AS (\n    SELECT\n        provisionnement_id AS ProvisionnementID,\n        fournisseur_nom,\n        fournisseur_contact,\n        fournisseur_adresse,\n        entrepot_nom,\n        entrepot_adresse,\n        entrepot_description,\n        date_commande AS DateCommandeProvision,\n        date_livraison AS DateLivraisonProvision,\n        materiaux_nom,\n        quantite_provisionnee AS Quantite,\n        prix_provision AS PrixUnitaire,\n        qualite_provision AS QualiteProvision\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeFournisseur`\n),\n\nmapped_data AS (\n    SELECT\n        sd.ProvisionnementID,\n        dim_materiaux.MateriauxID,\n        dim_fournisseur.FournisseurID,\n        dim_entrepot.EntrepotID,\n        dim_date.DateID AS DateCommandeProvision,\n        dim_dateLivraison.DateID AS DateLivraisonProvision,\n        sd.Quantite,\n        sd.PrixUnitaire,\n        sd.QualiteProvision\n    FROM staged_data sd\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Materiaux` dim_materiaux\n        ON dim_materiaux.MateriauxNom = sd.materiaux_nom\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_FournisseurDetails` dim_fournisseur\n        ON dim_fournisseur.FournisseurNom = sd.fournisseur_nom\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Entrepot` dim_entrepot\n        ON dim_entrepot.EntrepotNom = sd.entrepot_nom\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Date` dim_date\n        ON dim_date.Annee = EXTRACT(YEAR FROM sd.DateCommandeProvision)\n        AND dim_date.Mois = EXTRACT(MONTH FROM sd.DateCommandeProvision)\n        AND dim_date.Jours = EXTRACT(DAY FROM sd.DateCommandeProvision)\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Date` dim_dateLivraison\n        ON dim_dateLivraison.Annee = EXTRACT(YEAR FROM sd.DateLivraisonProvision)\n        AND dim_dateLivraison.Mois = EXTRACT(MONTH FROM sd.DateLivraisonProvision)\n        AND dim_dateLivraison.Jours = EXTRACT(DAY FROM sd.DateLivraisonProvision)\n)\n\nSELECT\n    ProvisionnementID,\n    MateriauxID,\n    FournisseurID,\n    EntrepotID,\n    DateCommandeProvision,\n    DateLivraisonProvision,\n    Quantite,\n    PrixUnitaire,\n    QualiteProvision\nFROM mapped_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`f_CommandeFournisseur`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:46:13.780831Z", "completed_at": "2024-12-02T13:46:13.830673Z"}, {"name": "execute", "started_at": "2024-12-02T13:46:13.830673Z", "completed_at": "2024-12-02T13:46:17.698935Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.926109552383423, "adapter_response": {"_message": "MERGE (263.0 rows, 36.9 KiB processed)", "code": "MERGE", "rows_affected": 263, "bytes_processed": 37812, "bytes_billed": 73400320, "location": "EU", "project_id": "projet-bi-isen", "job_id": "ccbc0e4b-b4e3-44a2-a429-70af16994903", "slot_ms": 5924}, "message": "MERGE (263.0 rows, 36.9 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.f_CommandeClient", "compiled": true, "compiled_code": "WITH  __dbt__cte__d_StatutCommande as (\n\n\nSELECT *\nFROM `projet-bi-isen.dataWarehouse.d_StatutCommande`\n), staged_data AS (\n    SELECT\n        client_nom,\n        client_prenom,\n        client_adresse,\n        client_contact,\n        produit_nom,\n        livreur_nom,\n        statut_commande,\n        produit_prix_unitaire AS PrixProduitVente,\n        produit_quantite AS Quantite,\n        date_commande AS DateCommande\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_CommandeClient`\n),\n\nmapped_data AS (\n    SELECT\n        GENERATE_UUID() AS CommandeID,\n        -- Recherche des cl\u00e9s dans les tables de dimension\n        dim_client.ClientID,\n        dim_product.ProduitID,\n        dim_livreur.LivreurID,\n        dim_statut.StatutID,\n        sd.PrixProduitVente,\n        sd.Quantite,\n        dim_date.DateID AS DateCommande\n    FROM staged_data sd\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Client` dim_client\n        ON dim_client.Nom = sd.client_nom\n        AND dim_client.Prenom = sd.client_prenom\n        AND dim_client.Adresse = sd.client_adresse\n        AND dim_client.Contact = sd.client_contact\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Produit` dim_product\n        ON dim_product.ProduitNom = sd.produit_nom\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Livreur` dim_livreur\n        ON dim_livreur.LivreurNom = sd.livreur_nom\n    LEFT JOIN __dbt__cte__d_StatutCommande dim_statut\n        ON dim_statut.Statut = sd.statut_commande\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Date` dim_date\n        ON dim_date.Annee = EXTRACT(YEAR FROM sd.DateCommande)\n        AND dim_date.Mois = EXTRACT(MONTH FROM sd.DateCommande)\n        AND dim_date.Jours = EXTRACT(DAY FROM sd.DateCommande)\n)\n\nSELECT\n    CommandeID,\n    ClientID,\n    ProduitID,\n    LivreurID,\n    StatutID,\n    PrixProduitVente,\n    Quantite,\n    DateCommande\nFROM mapped_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`f_CommandeClient`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-12-02T13:46:17.715597Z", "completed_at": "2024-12-02T13:46:17.732434Z"}, {"name": "execute", "started_at": "2024-12-02T13:46:17.732434Z", "completed_at": "2024-12-02T13:46:20.914930Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.207585573196411, "adapter_response": {"_message": "MERGE (175.0 rows, 19.6 KiB processed)", "code": "MERGE", "rows_affected": 175, "bytes_processed": 20068, "bytes_billed": 62914560, "location": "EU", "project_id": "projet-bi-isen", "job_id": "dbf2c439-2059-430d-9dff-ce06dc5470f9", "slot_ms": 3451}, "message": "MERGE (175.0 rows, 19.6 KiB processed)", "failures": null, "unique_id": "model.alimentationDatawarehouse.f_Production", "compiled": true, "compiled_code": "WITH staged_data AS (\n    SELECT\n        production_id AS ProductionID,\n        entrepot_nom,\n        production_debut AS DateDebut,\n        production_fin AS DateFin,\n        produit_nom,\n        quantite_produite AS QuantiteProduite,\n        materiaux_utilises,\n        quantite_utilisee AS QuantiteUtilise\n    FROM `projet-bi-isen`.`dataWarehouse`.`stg_Production`\n),\n\nmapped_data AS (\n    SELECT\n        sd.ProductionID,\n        dim_produit.ProduitID,\n        sd.QuantiteProduite,\n        dim_materiaux.MateriauxID,\n        sd.QuantiteUtilise,\n        dim_entrepot.EntrepotID,\n        dim_date_debut.DateID AS DateDebutID,\n        dim_date_fin.DateID AS DateFinID\n    FROM staged_data sd\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Produit` dim_produit\n        ON dim_produit.ProduitNom = sd.produit_nom\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Materiaux` dim_materiaux\n        ON dim_materiaux.MateriauxNom = sd.materiaux_utilises\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Entrepot` dim_entrepot\n        ON dim_entrepot.EntrepotNom = sd.entrepot_nom\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Date` dim_date_debut\n        ON dim_date_debut.Annee = EXTRACT(YEAR FROM sd.DateDebut)\n        AND dim_date_debut.Mois = EXTRACT(MONTH FROM sd.DateDebut)\n        AND dim_date_debut.Jours = EXTRACT(DAY FROM sd.DateDebut)\n    LEFT JOIN `projet-bi-isen`.`dataWarehouse`.`d_Date` dim_date_fin\n        ON dim_date_fin.Annee = EXTRACT(YEAR FROM sd.DateFin)\n        AND dim_date_fin.Mois = EXTRACT(MONTH FROM sd.DateFin)\n        AND dim_date_fin.Jours = EXTRACT(DAY FROM sd.DateFin)\n)\n\nSELECT\n    ProductionID,\n    ProduitID,\n    QuantiteProduite,\n    MateriauxID,\n    QuantiteUtilise,\n    EntrepotID,\n    DateDebutID AS DateDebut,\n    DateFinID AS DateFin\nFROM mapped_data", "relation_name": "`projet-bi-isen`.`dataWarehouse`.`f_Production`"}], "elapsed_time": 149.76957249641418, "args": {"log_path": "C:\\Users\\Moi\\Documents\\M2\\BI\\dbt\\dbtProjetBi\\alimentationDatawarehouse\\logs", "partial_parse_file_diff": true, "select": [], "exclude": [], "cache_selected_only": false, "log_format_file": "debug", "source_freshness_run_project_hooks": false, "populate_cache": true, "macro_debugging": false, "log_level": "info", "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "print": true, "write_json": true, "printer_width": 80, "quiet": false, "vars": {"execution_date": "2024-12-01"}, "log_file_max_bytes": 10485760, "use_colors": true, "version_check": true, "introspect": true, "require_explicit_package_overrides_for_builtin_materializations": true, "profiles_dir": "C:\\Users\\Moi\\.dbt", "use_colors_file": true, "project_dir": "C:\\Users\\Moi\\Documents\\M2\\BI\\dbt\\dbtProjetBi\\alimentationDatawarehouse", "send_anonymous_usage_stats": true, "defer": false, "show_resource_report": false, "static_parser": true, "indirect_selection": "eager", "log_format": "default", "log_level_file": "debug", "which": "run", "strict_mode": false, "require_resource_names_without_spaces": false, "favor_state": false, "empty": false, "invocation_command": "dbt run --vars {execution_date: 2024-12-01}", "enable_legacy_logger": false}}